enum ThreadKind {
  ONE_TO_ONE
  CLAN
}

enum MessageKind {
  TEXT
  IMAGE
  VIDEO
  FILE
  SYSTEM
}

enum ReportStatus {
  OPEN
  RESOLVED
  REJECTED
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model DMThread {
  id        String     @id @default(cuid())
  kind      ThreadKind
  pairKey   String?    @unique
  clanId    String?
  createdAt DateTime   @default(now())

  participants DMParticipant[] @relation("ThreadParticipants")
  messages     DMMessage[]     @relation("ThreadMessages")

  @@index([clanId])
}

model DMParticipant {
  threadId   String
  thread     DMThread @relation("ThreadParticipants", fields: [threadId], references: [id], onDelete: Cascade)
  userId     String
  role       String   @default("member")
  joinedAt   DateTime @default(now())
  lastReadId String?

  @@id([threadId, userId])
  @@index([userId])
}

model DMMessage {
  id         String      @id @default(cuid())
  threadId   String
  thread     DMThread    @relation("ThreadMessages", fields: [threadId], references: [id], onDelete: Cascade)
  senderId   String
  kind       MessageKind @default(TEXT)
  content    String?
  attachment Json?
  createdAt  DateTime    @default(now())

  editedAt  DateTime?
  deletedAt DateTime?
  deletedBy String?

  @@index([threadId, createdAt])
}

model DMReceipt {
  messageId   String
  userId      String
  deliveredAt DateTime  @default(now())
  readAt      DateTime?

  @@id([messageId, userId])
  @@index([userId])
  @@index([messageId])
}

model DMReport {
  id         String       @id @default(cuid())
  messageId  String
  reporterId String
  reason     String
  status     ReportStatus @default(OPEN)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt

  @@index([messageId])
  @@index([reporterId])
}

model DMUserThreadSetting {
  threadId   String
  userId     String
  mutedUntil DateTime?
  pinnedAt   DateTime?
  archivedAt DateTime?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  @@id([threadId, userId])
  @@index([userId])
  @@index([threadId])
}
